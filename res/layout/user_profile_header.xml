<?xml version="1.0" encoding="utf-8"?>

<!--

This is the default layout for the header on the profiles listviews.

Please note that the tweets, followers, and following text will be changed in my code
so that it translates correctly. They are just in there now as placeholders.


REQUIRED ELEMENTS (They MUST be included, but visibilities can be changed if you want):

1.) ProgressBar (spinner) - I put this right on top of the profile picture, but you can do whatever
                    with it. You could make it horizontal by adding this attribute:
                    style="@android:style/Widget.ProgressBar.Horizontal"
2.) Button (tweets) - button that shows the user's tweets
3.) Button (followers) - button that shows the user's followers
4.) Button (following) - button that shows who the user is following
5.) ImageView (background_image) - Holds the users background image
6.) ImageView (profile_pic) - Holds the users profile picture
7.) TextView (user_statement) - Holds the user description
8.) TextView (username) - Holds the users twitter handle
9.) TextView (verified_text) - Will be displayed if the user has been twitter verified. Leave the visibility
                    set to false.

-->
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:id="@+id/header" >

    <!-- this is the background image that will be effected if you change the
         meta-data for the constricting effect -->
    <ImageView
        android:id="@+id/background_image"
        android:layout_height="140dp"
        android:layout_width="match_parent"
        android:minHeight="210dp"
        android:scaleType="centerCrop"
        android:layout_marginTop="-5dp"
        />

    <!-- if you are have the constricting effect, i would highly suggest you keep the
         background color or the image will fall below and you will just have a weird style...
         maybe you can use that for something though? -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/background_image"
        android:background="@color/background_color"
        android:orientation="vertical">

        <TextView
            android:id="@+id/username"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="5dp"
            android:maxLines="1"
            android:layout_marginLeft="150dp"
            android:textColor="@color/textColor" />

        <TextView
            android:id="@+id/user_statement"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="12dp"
            android:layout_marginLeft="10dp"
            android:layout_marginRight="10dp"
            android:gravity="center"
            android:textColor="@color/textColor"/>

        <!-- these are the buttons. their text will be change on the fly, so it doesn't matter what they say here -->
        <LinearLayout
            android:orientation="horizontal"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:layout_marginBottom="10dp">

            <Button android:id="@+id/tweets"
                android:layout_height="60dp"
                android:layout_width="0dp"
                android:layout_weight="1"
                android:background="@drawable/pressed_button"
                android:text="Tweets"
                android:textColor="@color/textColor" />

            <View
                android:background="@color/textColor"
                android:layout_width="1dp"
                android:layout_height="40dp" />

            <Button android:id="@+id/followers"
                android:layout_height="60dp"
                android:layout_width="0dp"
                android:layout_weight="1"
                android:background="@drawable/pressed_button"
                android:text="Followers"
                android:textColor="@color/textColor" />

            <View
                android:background="@color/textColor"
                android:layout_width="1dp"
                android:layout_height="40dp" />

            <Button android:id="@+id/following"
                android:layout_height="60dp"
                android:layout_width="0dp"
                android:layout_weight="1"
                android:background="@drawable/pressed_button"
                android:text="Following"
                android:textColor="@color/textColor"/>

        </LinearLayout>

    </LinearLayout>

    <!-- here is the profile picture -->
    <ImageView
        android:layout_width="96dp"
        android:layout_height="96dp"
        android:layout_below="@+id/background_image"
        android:id="@+id/profile_pic"
        android:scaleType="fitCenter"
        android:adjustViewBounds="true"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="15dp"
        android:layout_marginTop="-70dp" />

    <!-- This one is pretty much up to you on how to do it. This will just create some shadowed text over
         the users profile picture. If you wanted to add a drawable to the textview, you could (drawable_left)
         You can also change the font size if you want, but I will change the text to "verified" no matter what
         you put -->
    <TextView
        android:id="@+id/verified_text"
        android:layout_width="96dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="-30dp"
        android:textSize="15dp"
        android:layout_below="@+id/profile_pic"
        android:layout_alignLeft="@+id/profile_pic"
        android:shadowColor="@android:color/black"
        android:shadowDy="1"
        android:shadowRadius="3"
        android:textColor="@android:color/white"
        android:gravity="center"
        android:visibility="gone" />

    <!-- you could maybe set this to be the actual bar instead of the spinner.
         in code I just make it indeterminate, so I suppose it would work. Experiment with it.
         Right here it is just right on top of the profile picture. Don't mess with the visibility though -->
    <ProgressBar
        android:layout_width="96dp"
        android:layout_height="96dp"
        android:minHeight="96dp" android:minWidth="96dp"
        android:maxWidth="96dp" android:maxHeight="96dp"
        android:layout_below="@+id/background_image"
        android:id="@+id/progress_bar"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="15dp"
        android:layout_marginTop="-70dp"
        android:indeterminateOnly="true"
        android:visibility="gone"/>

</RelativeLayout>