<?xml version="1.0" encoding="utf-8"?>

<!--

This layout is used when a user clicks on a tweet from one of their timelines. It is the initially loaded screen
on the view pager that contains the actual text of the tweet, the image, the favorite, retweet, and reply elements.


It is important for you to READ THIS before you decide if you want to edit it or not. If you decide not
to edit this layout, please, DELETE IT FROM THE PROJECT!

Because our emoji keyboard depends on more than just simple layouts and buttons, it WILL NOT be possible
to include it in this layout. So having this layout in your apk will drop the emoji keyboard when replying
to someones status. This is the only time that the keyboard will be dropped, but there is no way around it.

Please consider that before you choose to edit this one, and again, IF YOU DO NOT EDIT THIS LAYOUT, PLEASE
REMOVE IT FROM THE PROJECT. This can be done by simply right clicking and selecting "delete".


REQUIRED ELEMENTS (They MUST be included, but visibilities can be changed if you want):

*** Some of these elements are in the contact_info xml and the tweet_for_fragment xml so it is more organized ***
1.) ImageView (profile_pic) - Holds the profile picture
2.) TextView (name) - Holds the users name
3.) TextView (screen_name) - Holds the users twitter handle
4.) TextView (tweet) - Holds the text of the tweet
5.) TextView (retweeter) - Holds the "retweeted by @... " AND the " via ..." (if it is available)
6.) LinearLayout (linLayout) - Mine holds most of the tweet info (tweet, retweeter, time, ect...
                        you can check the code below). This is the portion that expands and contracts
                        when the user touches the expand button. I suppose you could just not put anything
                        in it if you don't want this expansion functionality though.
7.) ImageButton (expand) - The button that is pressed to expand the image
8.) ImageButton (favorite) - The button pressed to favorite a status (remember that I will change the
                        src for this image in code if the user has favorited it, but only the unfavorited icon
                        is available to use here - so be aware of that before changing it drastically)
9.) ImageButton (retweet) - Button pressed to retweet a status (you CAN change the src for this one
                        without worrying about me changing it)
10.) TextView (fav_count) - Holds the number of favorites for that status
11.) TextView (retweet_count) - Holds the number of retweets for that status
12.) EditText (reply) - The reply text box for the user to enter the reply
13.) ImageButton (reply_button) - Button to send the reply
14.) ImageButton (attach_button) - Button to attach an image. I have it hidden in the overflow menu
15.) ImageButton (at_button) - Button to open the dialog to find a user. I have it hidden in the overflow menu
16.) ImageButton (overflow_button) - Button to open the overflow menu. It will fly in from the left of the screen
17.) LinearLayout (buttons) - This is the layout that flies in when you press the overflow button.
                        It holds the at and attach buttons. If you don't want to use it though, just don't put
                        anything in it and set the visibility of the overflow button to gone.
                        Don't try changing the visibility of this element though, just make it so you can't access it.
18.) TextView (char_remaining) - Holds the number of characters left on the tweet. You CAN change the text size here
                        if you want.
19.) TextView (time) - Holds the time of the tweet. Real time, not the "time ago"
20.) ImageView (imageView) - Holds the picture that is attached to the tweet if there is one
21.) ImageView (attach) - Holds the image that is attached to your reply, if there is one. Only becomes
                        visible if the user presses the attach button

-->

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="0dp"
    android:layout_weight="1">

    <!-- this contains everything that isn't the reply bar at the bottom and the buttons for inserting a user or picture -->
    <LinearLayout android:layout_above="@+id/bottom_bar"
                  android:orientation="vertical"
                  android:layout_width="match_parent"
                  android:layout_height="match_parent" >

        <!-- this is the upper part of the tweet. This layout doesn't contain the picture, but it could if you wanted
             it too. This is where i also set the card background, but you don't necessarily have to have one. -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:background="@drawable/no_dialog_tweet_background"
            android:layout_margin="6dp">

            <LinearLayout
                android:orientation="horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center">

                <include layout="@layout/contact_info"
                    android:id="@+id/contact_info"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:layout_margin="10dp" />

                <ImageButton
                    android:id="@+id/expand"
                    android:layout_height="48dp"
                    android:layout_width="48dp"
                    android:src="@drawable/ic_action_expand_light"
                    android:scaleType="fitCenter"
                    android:adjustViewBounds="true"
                    android:background="@drawable/pressed_button"
                    android:layout_margin="10dp"
                    android:rotation="180"/>

            </LinearLayout>

            <!-- This linear layout is what is expanded and contracted when the user presses the expand button -->
            <LinearLayout
                android:id="@+id/linLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content" >

                <ScrollView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">

                    <!-- here is the layout that holds the information for the tweet. it is wrapped in a scroll view
                         because with smaller screen phones, when the keyboard comes up, it will be difficult to see
                         much of the text. So i would keep the scrollview -->
                    <include android:id="@+id/tweet_background"
                        layout="@layout/tweet_for_fragment"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent" />

                </ScrollView>

            </LinearLayout>

        </LinearLayout>


        <!-- This is the image view that holds the picture, if there is one. So it may or may not be dynamically switched
             from gone. keep that in mind -->
        <ImageView
                 android:id="@+id/imageView"
                 android:layout_height="fill_parent"
                 android:layout_width="fill_parent"
                 android:background="@android:color/transparent"
                 android:scaleType="fitCenter"
                 android:layout_margin="6dp"
                 android:visibility="gone" />

    </LinearLayout>

    <!-- these are the buttons that come up when pressing the overflow button. Don't mess with the visibility here -->
    <LinearLayout
        android:id="@+id/buttons"
        android:background="@drawable/background_card"
        android:layout_alignParentLeft="true"
        android:layout_above="@+id/bottom_bar"
        android:layout_height="wrap_content"
        android:layout_width="wrap_content"
        android:orientation="horizontal"
        android:gravity="bottom"
        android:layout_margin="6dp"
        android:layout_marginBottom="10dp"
        android:visibility="gone">

        <ImageButton
            android:id="@+id/at_button"
            android:layout_width="48dp"
            android:layout_height="48dp"
            android:background="@drawable/pressed_button"
            android:src="@drawable/mentions_light"
            android:gravity="center"
            android:layout_gravity="center"
            android:textColor="#807f7f" />

        <ImageButton
            android:id="@+id/attach_button"
            android:layout_width="48dp"
            android:layout_height="48dp"
            android:src="@drawable/ic_action_attach_light"
            android:background="@drawable/pressed_button" />

    </LinearLayout>

    <!-- this is the reply bar at the bottom of the screen -->
    <LinearLayout
        android:layout_alignParentBottom="true"
        android:orientation="horizontal"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom"
        android:gravity="bottom"
        android:id="@+id/bottom_bar" >

        <ImageButton
            android:id="@+id/overflow_button"
            android:layout_width="48dp"
            android:layout_height="48dp"
            android:src="@drawable/ic_action_overflow_light"
            android:background="@drawable/pressed_button" />

        <!-- you will want to set the textCursorDrawable to null if you are doing a light theme
             this makes it so the cursor is black instead of white. If you are using a dark theme,
             just delete that attribute -->
        <EditText
            android:id="@+id/reply"
            android:layout_height="match_parent"
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_gravity="bottom"
            android:textCursorDrawable="@null"
            android:textColor="@color/textColor"
            android:textColorHint="@color/dateColor"
            android:inputType="textMultiLine|textCapSentences"/>

        <LinearLayout
            android:orientation="vertical"
            android:layout_width="48dp"
            android:layout_height="wrap_content">

            <!-- make sure the text fits correctly. I don't change the text size in code here -->
            <TextView
                android:layout_height="13dp"
                android:layout_width="match_parent"
                android:gravity="center_horizontal"
                android:id="@+id/char_remaining"
                android:textSize="11dp"
                android:textColor="@color/textColor"/>

            <ImageButton
                android:id="@+id/reply_button"
                android:layout_width="48dp"
                android:layout_height="48dp"
                android:src="@drawable/ic_action_send_light"
                android:background="@drawable/pressed_button" />

            </LinearLayout>

    </LinearLayout>

    <!-- this image view holds the picture that a user can attach when replying to a tweet -->
    <ImageView
        android:layout_above="@+id/bottom_bar"
        android:layout_alignParentRight="true"
        android:id="@+id/attach"
        android:layout_height="96dp"
        android:layout_width="wrap_content"
        android:scaleType="fitCenter"
        android:layout_marginBottom="15dp"
        android:visibility="gone"/>

</RelativeLayout>