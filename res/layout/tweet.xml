<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright (C) 2014 Luke Klinker

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!--

This is the tweet that is displayed on your different timelines and profiles. The most used
layout in the app I'm sure, so it should be clean and easy for a user to understand.

I really like to make things stick out with bold and such, but it is up to you how to do it.
Remember that you have lots of color choices for the fonts too. Any hexadecimal color will work,
you can define more in the colors xml file or just hard-code them into here


REQUIRED ELEMENTS (They MUST be included, but visibilities can be changed if you want):

1.) ImageView (profile_pic) - Holds the profile picture for the user
2.) LinearLayout (background) - Holds the content of the tweet (name, time, text, ect). This should
                 be where the background image should be applied. It should also be the portion that
                 expands and contracts when the user long clicks the tweet (or regular clicks,
                 depending on the settings). You can do whatever you want with this as long as it
                 follows those guidelines
3.) TextView (name) - Holds the users real name (or twitter handle if they select that setting)
4.) TextView (time) - Holds the "time ago" for the tweet
5.) TextView (tweet) - Holds the actual text of the tweet. set height to wrap_content because you never
                 know how long a tweet will be.
6.) TextView (retweeter) - Holds the "retweeted by: @..." text if the tweet is a retweet. You shouldn't
                 mess with the visibility on this one because I change it in code.
7.) ImageView (image) - Holds the picture that is attached to the tweet (if there is one), or the YouTube
                 thumbnail. I have it set up to only show a clip of that image right now. All of that
                 manipulation is done from the xml here though, so change it to however you want it
                 to display.
8.) ImageView (play_button) - Don't mess with this to much, the only thing you should really have to do
                 is make sure it is centered over the image. Its visibility is changed in code whenever
                 there is a YouTube thumbnail on the tweet.
9.) LinearLayout (expansion) - This is the layout that expands on the tweet when it is long clicked (or
                 clicked, depending on the setting). You will want to watch out for the bottom margin. Make
                 sure if you change this expansion you also change that negative margin or the animation will
                 be jumpy. In theory, this doesnt have to be at the bottom either, it should be able to expand
                 from anywhere on the tweet... but that is untested.
10.) TextView (screenname) - Displays the screen name if the user has both handle and name selected under theme
                 settings. Keep the visibility at gone for this one.

*** these next elements are inside of the expansion, and that is where they should stay because they aren't ***
*** set up until the user opens the expansion to reduce the load when scrolling through the timeline ***
11.) ImageButton (favorite) - Button pressed to favorite the tweet
12.) TextView (fav_count) - Displays the number of favorites on that tweet
13.) ImageButton (retweet) - Button pressed to retweet a status
14.) TextView (retweet_count) - Displays the number of retweets on a status
15.) EditText (reply) - This is where the user types the reply to a status
16.) TextView (char_count) - Displays the number of characters availible for the tweet (max of 140)
                 You can change the text size here. This is one of the only places I don't do it in code
17.) ImageButton (reply_button) - Button to send the reply to the status
18.) ImageButton (share_button) - button the user presses to share the tweet inline
19.) ImageButton (quote_button) - Opens the dialog compose with the quote inserted

 -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="horizontal"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:paddingLeft="6dp"
              android:paddingRight="6dp"
              android:paddingTop="5dp"> <!-- This padding is what you should change for your list views dividers. It can be zero. -->

    <LinearLayout
                  android:orientation="vertical"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:gravity="center_horizontal">

        <!-- The tweeters picture -->
        <!-- changing the width and height will change the size of the picture -->
        <ImageView
                android:layout_width="48dp"
                android:layout_height="48dp"
                android:id="@+id/profile_pic"
                android:scaleType="fitCenter"
                android:adjustViewBounds="true" />

        </LinearLayout>

    <!-- Tweet's Content -->
    <!-- This margin left is what you will want to change to get your picture to align correctly -->
    <LinearLayout
            android:id="@+id/background"
            android:orientation="vertical"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:background="@drawable/timeline_background"
            android:layout_marginLeft="-10dp" >

        <!-- Holds the name, screen name, and time-->
        <RelativeLayout
                android:orientation="horizontal"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content">

            <!-- somthing you may want to try here is setting the android:fontFamily="sans-serif-light"
                this will give you the holo light font that Talon uses by default. But it is up to you-->
            <TextView
                    android:id="@+id/name"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:textStyle="bold"
                    android:textColor="@color/textColor"
                    android:layout_alignParentTop="true"
                    android:fontFamily="sans-serif-light"
                    android:layout_marginLeft="8dp"/>

            <TextView
                android:id="@+id/screenname"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_below="@+id/name"
                android:layout_marginLeft="20dp"
                android:textColor="@color/dateColor"
                android:visibility="gone"/>

            <TextView
                    android:id="@+id/time"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:layout_marginRight="2dp"
                    android:layout_marginStart="5dp"
                    android:maxLines="1"
                    android:textStyle="italic"
                    android:textColor="@color/dateColor"
                    android:layout_toRightOf="@+id/name"
                    android:layout_alignBaseline="@+id/name" />

            <TextView
                    android:id="@+id/tweet"
                    android:layout_height="wrap_content"
                    android:layout_width="fill_parent"
                    android:layout_below="@+id/screenname"
                    android:paddingTop="3dp"
                    android:layout_marginRight="16dp"
                    android:layout_marginLeft="16dp"
                    android:fontFamily="sans-serif-light"
                    android:textColor="@color/textColor"
                    android:paddingBottom="10dp" />

            <TextView
                    android:id="@+id/retweeter"
                    android:layout_height="wrap_content"
                    android:layout_width="fill_parent"
                    android:textSize="11dp"
                    android:layout_below="@+id/tweet"
                    android:layout_marginRight="16dp"
                    android:layout_marginLeft="8dp"
                    android:paddingBottom="10dp"
                    android:textStyle="italic"
                    android:textColor="@color/dateColor"
                    android:visibility="gone" />

            <ImageView
                       android:id="@+id/image"
                       android:layout_below="@+id/retweeter"
                       android:layout_height="96dp"
                       android:layout_width="match_parent"
                       android:scaleType="centerCrop"
                       android:layout_marginLeft="8dp"
                       android:layout_marginRight="8dp"
                       android:layout_marginBottom="10dp"
                       android:visibility="gone"
                       /> <!-- don't change the visibility here. I do it myself in the code -->

            <!-- I would leave this pretty much as is. It is the play button that is overlayed for youtube -->
            <ImageView
                android:id="@+id/play_button"
                android:layout_below="@+id/retweeter"
                android:layout_height="96dp"
                android:layout_width="match_parent"
                android:scaleType="centerInside"
                android:layout_marginLeft="8dp"
                android:layout_marginRight="8dp"
                android:layout_marginBottom="10dp"
                android:visibility="gone"
                android:src="@drawable/ic_action_play"
                /> <!-- I change the visibility dynamically, so don't change it -->

        </RelativeLayout>

        <!-- I am going to recommend that you don't change the bottom margin here. that negative is
            used for the animation. But you may have to change it if you change the heights of the elements
            in the layout. It should match those heights. Also, do not change the visibility here because it
            will get messed up as I dynamically change it. -->
        <LinearLayout
                android:id="@+id/expansion"
                android:orientation="vertical"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingRight="3dp"
                android:layout_marginBottom="-95dp"
                android:visibility="gone">

            <LinearLayout
                    android:orientation="horizontal"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:paddingRight="3dp"
                    android:layout_gravity="center_vertical">

                <ImageButton
                    android:id="@+id/quote_button"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:src="@drawable/ic_action_reply_all_light"
                    android:minHeight="32dp" android:minWidth="32dp"
                    android:scaleType="fitCenter" android:adjustViewBounds="true"
                    android:maxWidth="32dp" android:maxHeight="32dp"
                    android:background="@drawable/pressed_button"
                    android:layout_marginLeft="8dp" />

                <ImageButton
                    android:id="@+id/share_button"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:src="@drawable/ic_action_share_light"
                    android:minHeight="32dp" android:minWidth="32dp"
                    android:scaleType="fitCenter" android:adjustViewBounds="true"
                    android:maxWidth="32dp" android:maxHeight="32dp"
                    android:background="@drawable/pressed_button"
                    android:layout_marginLeft="8dp" />

                <ImageButton
                        android:id="@+id/favorite"
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:src="@drawable/ic_action_favorite_light"
                        android:scaleType="fitCenter"
                        android:adjustViewBounds="true"
                        android:background="@drawable/pressed_button"
                        android:layout_marginLeft="5dp" />

                <TextView
                    android:layout_height="37dp"
                    android:layout_width="wrap_content"
                    android:layout_marginLeft="3dp"
                    android:textColor="@color/textColor"
                    android:id="@+id/fav_count" />

                <ImageButton
                        android:id="@+id/retweet"
                        android:layout_width="37dp"
                        android:layout_height="37dp"
                        android:src="@drawable/ic_action_retweet_light"
                        android:scaleType="fitCenter"
                        android:adjustViewBounds="true"
                        android:layout_marginLeft="8dp"
                        android:background="@drawable/pressed_button" />

                <TextView
                        android:layout_height="37dp"
                        android:layout_width="wrap_content"
                        android:layout_marginLeft="3dp"
                        android:gravity="center_vertical"
                        android:textColor="@color/textColor"
                        android:id="@+id/retweet_count" />


            </LinearLayout>

            <LinearLayout
                    android:orientation="horizontal"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:layout_gravity="bottom">

                <!-- This is the reply bar -->
                <!-- you will want to set the textCursorDrawable to null if you are doing a light theme
                     this makes it so the cursor is black instead of white. If you are using a dark theme,
                     just delete that attribute -->
                <EditText
                        android:id="@+id/reply"
                        android:layout_height="50dp"
                        android:layout_width="0dp"
                        android:layout_weight="1"
                        android:layout_marginBottom="8dp"
                        android:textCursorDrawable="@null"
                        android:textColor="@color/textColor"
                        android:inputType="textMultiLine|textCapSentences"/>

                <!-- This one holds the send button and the character counter -->
                <LinearLayout
                        android:orientation="vertical"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_gravity="center_vertical">

                    <TextView
                            android:layout_height="13dp"
                            android:layout_width="match_parent"
                            android:layout_marginLeft="3dp"
                            android:textSize="10dp"
                            android:gravity="right"
                            android:textColor="@color/textColor"
                            android:id="@+id/char_remaining" />

                    <ImageButton
                            android:id="@+id/reply_button"
                            android:layout_width="37dp"
                            android:layout_height="37dp"
                            android:src="@drawable/ic_action_send_light"
                            android:scaleType="fitCenter"
                            android:adjustViewBounds="true"
                            android:layout_marginLeft="4dp"
                            android:background="@drawable/pressed_button" />
                    </LinearLayout>

            </LinearLayout>

        </LinearLayout>

    </LinearLayout>

</LinearLayout>